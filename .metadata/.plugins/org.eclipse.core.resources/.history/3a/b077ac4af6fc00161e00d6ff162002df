package asteroids.model;

import be.kuleuven.cs.som.annotate.*;

/**
 * 
 * @author Martijn & Flor
 * 
 * @Invar The ship cannot go faster than the speed of light
 * 			|isValidVelocity(TotalVelocity(getXVelocity(), getYVelocity))
 *
 */
public class Ship {
	
	/**
	 * Returns the current x position of the ship
	 */
	@Basic @Raw
	public double getXPosition(){
		
		return this.xPosition;
	}
	
	/**
	 * Sets the x position of the ship
	 * 
	 * @post	...
	 * 			|new.getXPosition() = xPos
	 */
	@Basic @Raw
	public void setXPosition(double xPos){
		this.xPosition = xPos;
	}
	
	private double xPosition;
	
	/**
	 * returns the y position of the ship
	 */
	@Basic @Raw
	public double getYPosition(){
		
		return this.yPosition;
	}
	
	
	/**
	 * Sets the y position of the ship
	 * 
	 * @post	...
	 * 			|new.getYPosition() = yPos
	 */
	@Basic @Raw
	public void setYposition(double yPos){
		this.yPosition = yPos;
	}
	
	private double yPosition;
	
	
	/**
	 * 
	 * @return this.velocity
	 */
	public double getXVelocity(){
		
		return this.xVelocity;
	}
	
	/**
	 * @post	...
	 * 			| new.getXVelocity() = xVel
	 * 
	 * @post 	...
	 * 			| if !isValidVelocity(totalVelocity(xVel, this.yVelocity))
	 * 			| new.getXVelocity() = getXVelocity()
	 * 
	 */
	public void setXVelocity(double xVel){
		
		if(isValidVelocity(totalVelocity(xVel, this.yVelocity)))
			this.xVelocity = xVel;
		
	}
	
	private double xVelocity;
	
	/**
	 * 
	 * @return
	 */
	public double getYVelocity(){
		return this.yVelocity;
	}
	
	/**
	 * @post	...
	 * 			| new.getYVelocity() = yVel
	 * 
	 * @post 	...
	 * 			| if !isValidVelocity(totalVelocity(this.xVelocity, yVel))
	 * 			| new.getYVelocity() = getYVelocity()
	 * 
	 */
	public void setYVelocity(double yVel){
		if(isValidVelocity(totalVelocity(this.xVelocity,yVel)))
			this.xVelocity = yVel;
		
	}
	private double yVelocity;
	
	
	
	/**
	 * @post	...
	 * 			| new.getXVelocity() = xVel
	 * 			| new.getYVelocity() = yVel
	 * 
	 * @post 	...
	 * 			| if !isValidVelocity(totalVelocity(xVel, yVel))
	 * 			| new.getXVelocity() = getXVelocity()
	 * 			| new.getXVelocity() = getXVelocity()
	 * 
	 */
	public void setVelocity(double xVel, double yVel){
		if (isValidVelocity(totalVelocity(xVel,yVel)))
			this.xVelocity = xVel;
			this.yVelocity = yVel;
	}
	
	/**
	 * @return The total velocity of the ship
	 * 			|result == Math.sqrt(Math.pow(xVel,2) +Math.pow(yVel,2))
	 * 
	 * @return if the sum causes overflow, return positive infinity
	 * 			|result == Double.POSITIVE_INFINITY
	 */
	public double totalVelocity(double xVel, double yVel){
		if (Double.MAX_VALUE - Math.pow(xVel,2) < Math.pow(yVel,2))
			return Double.POSITIVE_INFINITY;
		else
			return Math.sqrt(Math.pow(xVel,2) +Math.pow(yVel,2));
	}
	
	
	public boolean isValidVelocity(double totalVel){
		return totalVel <= LIGHT_SPEED;
	}
	
	public static final double LIGHT_SPEED = 300000;
}
